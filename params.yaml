doi: 10.5281/zenodo.7223446
out_dir: data
metadata_file: metadata.csv
train_test_val_split:
  - 0.75 # Training
  - 0.15 # Validation
  - 0.10 # Test
random_seed: 37

# Data Loader
batch_size: 16
num_workers: 24
resize_dimension: 512
apply_preprocessing: False

# Training
architecture: DeepLabV3Plus # https://smp.readthedocs.io/en/latest/models.html
encoder: efficientnet-b0 # https://smp.readthedocs.io/en/latest/encoders.html
encoder_weights: imagenet
epochs: 100 # Must be greter than the epoch number in the checkpoint otherwise it will throw an error. If no checkpoint is available then it will start from scratch so adjust accordingly.
lr: 0.04
n_classes: 9
tune_lr: True
dev_run: False # Only for testing purposes - executes only 1 epoch without training - not compatible with checkpoint
n_channels: 3
device: auto # cuda, cpu, mps, auto
checkpoint_path: logs/DeepLabV3Plus_efficientnet-b0/checkpoints/epoch=74-val_f1=0.56.ckpt # None if checkpoint not available
# checkpoint_path: None
optimizer: adamax
loss: DiceLoss # https://smp.readthedocs.io/en/latest/losses.html
models_dir: models
logs_dir: logs
save_best_checkpoint: True # Save model checkpoint only if the validation metric being monitored is improved
metric_threshold: 0.56 # Save model checkpoint only if the validation metric being monitored is greater than the threshold and save_best_checkpoint is set to True. If no checkpoint is available then it will start from scratch so adjust accordingly. Ideally, it should be used when you want to save a model that meets the expected metric threshold. For example, this is useful when you want to resume training from a checkpoint.

# Evaluation
evaluate: True
save_predictions: True # Plots predictions on a randomly chosen batch from test dataloader and saves them as PNG
results_dir: results

# Available Losses
# DiceLoss
# FocalLoss
# TverskyLoss
# JaccardLoss
# LovaszLoss
# SoftBCEWithLogitsLoss ---- Not Working
# SoftCrossEntropyLoss
# MCCLoss

# Available Optimizers
# adam: Adam
# adamw: AdamW
# adagrad: Adagrad
# adadelta: Adadelta
# adamax: Adamax
# asgd: ASGD
# sgd: SGD
# rmsprop: RMSprop

# Available Models
# DeepLabV3Plus
# DeepLabV3
# Unet
# UNetPlusPlus
# Linknet
# PSPNet
# FPN
# MAnet
# PAN

# Available Encoders
# resnet18: ResNet18
# resnet34: ResNet34
# resnet50: ResNet50
# resnet101: ResNet101
# resnet152: ResNet152

# Available Device
# cpu: cpu
# cuda: cuda
# mps: mps
